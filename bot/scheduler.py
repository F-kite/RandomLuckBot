import asyncio
import telebot
from telebot import types
import logging
from datetime import datetime
import pytz
import random
from sqlalchemy import and_
from db import SessionLocal
from models import Giveaway, GiveawayParticipant,  Channel, Winner, User
from utils import log_info, log_error

import telebot.apihelper

async def publish_scheduled_giveaways(bot):
    """–ü—É–±–ª–∏–∫—É–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–∏, –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Å—Ç—É–ø–∏–ª–æ"""
    session = SessionLocal()
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º "—Å–µ–π—á–∞—Å" 
        # –í–∞–∂–Ω–æ: —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ –ë–î —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω —Å —ç—Ç–∏–º
        now = datetime.now(pytz.utc) # –ï—Å–ª–∏ –≤ –ë–î —Ö—Ä–∞–Ω–∏—Ç—Å—è "–Ω–∞–∏–≤–Ω—ã–π" datetime, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–π –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
        
        # –ù–∞—Ö–æ–¥–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –≤ —Å—Ç–∞—Ç—É—Å–µ 'pending' —Å publication_time <= now
        giveaways_to_publish = session.query(Giveaway).filter(
            and_(
                Giveaway.status == 'pending',
                Giveaway.publication_time <= now
            )
        ).all()

        for giveaway in giveaways_to_publish:
            try:
                # 1. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ –∏–∑ –ë–î
                channel_db_obj = session.query(Channel).get(giveaway.channel_id)
                if not channel_db_obj:
                    log_error(bot.logger, f"–ö–∞–Ω–∞–ª –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î", "–ø—É–±–ª–∏–∫–∞—Ü–∏—è")
                    # –ú–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å 'error' –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å 'pending' –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
                    # giveaway.status = 'error'
                    # session.commit()
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∫–∞–Ω–∞–ª–∞ username (–Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ @username)
                if not channel_db_obj.username:
                    log_error(bot.logger, f"–ö–∞–Ω–∞–ª –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –Ω–µ –∏–º–µ–µ—Ç @username –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏", "–ø—É–±–ª–∏–∫–∞—Ü–∏—è")
                    # giveaway.status = 'error_channel_no_username'
                    # session.commit()
                    continue
                
                channel_username = channel_db_obj.username
                channel_title = channel_db_obj.title or channel_username

                # 2. –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫—É –¥–ª—è —É—á–∞—Å—Ç–∏—è
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º f-—Å—Ç—Ä–æ–∫—É –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback_data
                markup = types.InlineKeyboardMarkup()
                button_text = giveaway.participation_button_text or "–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å" # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –µ—Å–ª–∏ NULL
                callback_data = f"enter_giveaway:{giveaway.id}"
                markup.add(types.InlineKeyboardButton(text=button_text, callback_data=callback_data))
                
                # 3. –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                # –ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                description = giveaway.description or "–†–æ–∑—ã–≥—Ä—ã—à!"
                prize = giveaway.prize or "–ü—Ä–∏–∑ –Ω–µ —É–∫–∞–∑–∞–Ω"
                
                caption_text = f"{description}\n\nüéÅ <b>–ü—Ä–∏–∑:</b> {prize}"
                message_text = f"{description}\n\nüéÅ –ü—Ä–∏–∑: {prize}"
                
                # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –º–µ–¥–∏–∞
                sent_message = None
                try:
                    if giveaway.media_type == 'photo' and giveaway.media_file_id:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
                        sent_message = await bot.send_photo(
                            chat_id=f"@{channel_username}", 
                            photo=giveaway.media_file_id, 
                            caption=caption_text,
                            parse_mode='HTML', # –í–∫–ª—é—á–∞–µ–º HTML —Ä–∞–∑–º–µ—Ç–∫—É
                            reply_markup=markup
                        )
                    elif giveaway.media_type == 'video' and giveaway.media_file_id:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –ø–æ–¥–ø–∏—Å—å—é
                        sent_message = await bot.send_video(
                            chat_id=f"@{channel_username}", 
                            video=giveaway.media_file_id, 
                            caption=caption_text,
                            parse_mode='HTML',
                            reply_markup=markup
                        )
                    elif giveaway.media_type == 'animation' and giveaway.media_file_id:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF (–∞–Ω–∏–º–∞—Ü–∏—é) —Å –ø–æ–¥–ø–∏—Å—å—é
                        sent_message = await bot.send_animation(
                            chat_id=f"@{channel_username}", 
                            animation=giveaway.media_file_id, 
                            caption=caption_text,
                            parse_mode='HTML',
                            reply_markup=markup
                        )
                    elif giveaway.media_type == 'document' and giveaway.media_file_id:
                         # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç) —Å –ø–æ–¥–ø–∏—Å—å—é
                         sent_message = await bot.send_document(
                            chat_id=f"@{channel_username}", 
                            document=giveaway.media_file_id, 
                            caption=caption_text,
                            parse_mode='HTML',
                            reply_markup=markup
                        )
                    else: # –ë–µ–∑ –º–µ–¥–∏–∞ –∏–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sent_message = await bot.send_message(
                            chat_id=f"@{channel_username}", 
                            text=message_text,
                            parse_mode='HTML',
                            reply_markup=markup
                        )
                    
                    # 5. –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
                    if sent_message:
                        giveaway.message_id = sent_message.message_id
                        giveaway.status = 'active'
                        session.commit()
                        log_info(bot.logger, f"‚úÖ –†–æ–∑—ã–≥—Ä—ã—à {giveaway.id} —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ @{channel_username} (—Å–æ–æ–±—â–µ–Ω–∏–µ ID: {sent_message.message_id})")
                    else:
                        # –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
                        log_error(bot.logger, f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à {giveaway.id}: send_message –≤–µ—Ä–Ω—É–ª None", "–ø—É–±–ª–∏–∫–∞—Ü–∏—è")
                        # –ú–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏
                        giveaway.status = 'error_publish_failed'
                        session.commit()
                        
                except telebot.apihelper.ApiException as e:
                    # –û—à–∏–±–∫–∏ API Telegram (–∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –±–æ—Ç –Ω–µ –∞–¥–º–∏–Ω, –Ω–µ—Ç –ø—Ä–∞–≤ –∏ —Ç.–¥.)
                    error_msg = str(e)
                    log_error(bot.logger, f"–û—à–∏–±–∫–∞ API Telegram –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –≤ –∫–∞–Ω–∞–ª @{channel_username}: {error_msg}", "–ø—É–±–ª–∏–∫–∞—Ü–∏—è")
                    
                    # –ú–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
                    if "Bad Request: chat not found" in error_msg:
                        giveaway.status = 'error_channel_not_found'
                    elif "Forbidden: bot is not a member" in error_msg or "Forbidden: bot was kicked" in error_msg:
                        giveaway.status = 'error_bot_not_member'
                    elif "Bad Request: not enough rights to send" in error_msg:
                        giveaway.status = 'error_no_rights'
                    else:
                        giveaway.status = 'error_telegram_api'
                    session.commit()
                    
                except Exception as e:
                    # –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é)
                    log_error(bot.logger, e, f"–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –≤ –∫–∞–Ω–∞–ª @{channel_username}")
                    giveaway.status = 'error_unexpected'
                    session.commit()

            except Exception as e:
                session.rollback()
                log_error(bot.logger, e, f"–ø—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id}")

    except Exception as e:
        log_error(bot.logger, e, "–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
    finally:
        session.close()

async def finish_giveaways_by_time(bot):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à–∏, –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Å—Ç—É–ø–∏–ª–æ (–µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ 'time')"""
    session = SessionLocal()
    try:
        now = datetime.now(pytz.utc) 
        
        giveaways_to_finish = session.query(Giveaway).filter(
            and_(
                Giveaway.status == 'active',
                Giveaway.end_condition_type == 'time',
                Giveaway.end_time <= now
            )
        ).all()

        for giveaway in giveaways_to_finish:
            try:
                log_info(bot.logger, f"–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –ø–æ –≤—Ä–µ–º–µ–Ω–∏")
                
                # 1. –í—ã–±–∏—Ä–∞–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
                winners = await select_winners(session, giveaway)
                
                if winners is None:
                    # –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
                    giveaway.status = 'error_winner_selection'
                    session.commit()
                    log_error(bot.logger, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id}", "–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏")
                    continue
                
                if not winners:
                    # –ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                    log_info(bot.logger, f"–†–æ–∑—ã–≥—Ä—ã—à {giveaway.id} –∑–∞–≤–µ—Ä—à–µ–Ω: –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
                    await publish_results(bot, session, giveaway, [])
                    giveaway.status = 'completed_no_participants'
                    session.commit()
                    continue

                # 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –≤ –ë–î
                for i, participant in enumerate(winners):
                    place = i + 1
                    winner_record = Winner(
                        lottery_id=giveaway.id, # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–º—è –ø–æ–ª—è –≤ –º–æ–¥–µ–ª–∏
                        participant_id=participant.id,
                        place=place,
                        is_additional=False
                    )
                    session.add(winner_record)
                
                session.commit()
                
                # 3. –ü—É–±–ª–∏–∫—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–∞–Ω–∞–ª
                await publish_results(bot, session, giveaway, winners)
                
                # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                await notify_creator(bot, session, giveaway, winners)
                
                # 5. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞
                giveaway.status = 'completed'
                session.commit()
                
                log_info(bot.logger, f"–†–æ–∑—ã–≥—Ä—ã—à {giveaway.id} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ –≤—Ä–µ–º–µ–Ω–∏. –í—ã–±—Ä–∞–Ω–æ {len(winners)} –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π.")
                
            except Exception as e:
                session.rollback()
                log_error(bot.logger, e, f"–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –ø–æ –≤—Ä–µ–º–µ–Ω–∏")

    except Exception as e:
        log_error(bot.logger, e, "–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏")
    finally:
        session.close()

async def check_giveaways_by_participants(bot):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    session = SessionLocal()
    try:
        # –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏ —Å —É—Å–ª–æ–≤–∏–µ–º 'participants'
        active_participant_giveaways = session.query(Giveaway).filter(
            and_(
                Giveaway.status == 'active',
                Giveaway.end_condition_type == 'participants'
            )
        ).all()

        for giveaway in active_participant_giveaways:
            try:
                now = datetime.now(pytz.utc)
                
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                participant_count = session.query(GiveawayParticipant).filter_by(giveaway_id=giveaway.id).count()
                
                if participant_count >= giveaway.end_participants_count:
                    log_info(bot.logger, f"–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ({participant_count}>={giveaway.end_participants_count})")
                
                    # 1. –í—ã–±–∏—Ä–∞–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
                    winners = await select_winners(session, giveaway)
                    
                    if winners is None:
                        # –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
                        giveaway.status = 'error_winner_selection'
                        session.commit()
                        log_error(bot.logger, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id}", "–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º")
                        continue
                    
                    if not winners:
                        # –ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (—Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ, –µ—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã)
                        log_info(bot.logger, f"–†–æ–∑—ã–≥—Ä—ã—à {giveaway.id} –∑–∞–≤–µ—Ä—à–µ–Ω: –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
                        await publish_results(bot, session, giveaway, [])
                        giveaway.status = 'completed_no_participants'
                        session.commit()
                        continue

                    # 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –≤ –ë–î
                    for i, participant in enumerate(winners):
                        place = i + 1
                        winner_record = Winner(
                            lottery_id=giveaway.id, # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–º—è –ø–æ–ª—è –≤ –º–æ–¥–µ–ª–∏
                            participant_id=participant.id,
                            place=place,
                            is_additional=False
                        )
                        session.add(winner_record)
                    
                    session.commit()
                    
                    # 3. –ü—É–±–ª–∏–∫—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–∞–Ω–∞–ª
                    await publish_results(bot, session, giveaway, winners)
                    
                    # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                    await notify_creator(bot, session, giveaway, winners)
                    
                    # 5. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞
                    giveaway.status = 'completed'
                    session.commit()
                    
                    log_info(bot.logger, f"–†–æ–∑—ã–≥—Ä—ã—à {giveaway.id} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –í—ã–±—Ä–∞–Ω–æ {len(winners)} –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π.")
                    
            except Exception as e:
                session.rollback()
                log_error(bot.logger, e, f"–ø—Ä–æ–≤–µ—Ä–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id}")

    except Exception as e:
        log_error(bot.logger, e, "–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º")
    finally:
        session.close()

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

async def select_winners(session, giveaway: Giveaway):
    """
    –í—ã–±–∏—Ä–∞–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π —Ä–æ–∑—ã–≥—Ä—ã—à–∞ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ GiveawayParticipant –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        participants = session.query(GiveawayParticipant).filter_by(giveaway_id=giveaway.id).all()
        
        if not participants:
            return [] # –ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            
        winners_count = giveaway.winners_count
        
        # –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–µ–Ω—å—à–µ, —á–µ–º –ø–æ–ª–æ–∂–µ–Ω–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π, –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ—Ö
        if len(participants) <= winners_count:
            return participants
            
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º random.sample –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        selected_winners = random.sample(participants, winners_count)
        return selected_winners
        
    except Exception as e:
        log_error(None, e, f"–≤—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id}") # logger –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω –∏–∑ –≤—ã–∑—ã–≤–∞—é—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
        return None

async def publish_results(bot, session, giveaway: Giveaway, winners: list):
    """
    –ü—É–±–ª–∏–∫—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –≤ –∫–∞–Ω–∞–ª.
    """
    try:
        # 1. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
        channel_db_obj = session.query(Channel).get(giveaway.channel_id)
        if not channel_db_obj or not channel_db_obj.username:
            log_error(bot.logger, f"–ö–∞–Ω–∞–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç @username", "–ø—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            return

        channel_username = channel_db_obj.username
        channel_title = channel_db_obj.title or channel_username

        # 2. –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        if not winners:
            results_text = f"üéâ <b>–†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à–µ–Ω!</b>\n\n"
            results_text += f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏–Ω—è–ª —É—á–∞—Å—Ç–∏–µ.\n\n"
            results_text += f"<s>{giveaway.description or '–†–æ–∑—ã–≥—Ä—ã—à'}</s>\n"
            results_text += f"–ü—Ä–∏–∑: <s>{giveaway.prize or '–ù–µ —É–∫–∞–∑–∞–Ω'}</s>"
        else:
            results_text = f"üéâ <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞!</b>\n\n"
            results_text += f"<s>{giveaway.description or '–†–æ–∑—ã–≥—Ä—ã—à'}</s>\n"
            results_text += f"–ü—Ä–∏–∑: <s>{giveaway.prize or '–ù–µ —É–∫–∞–∑–∞–Ω'}</s>\n\n"
            results_text += f"üèÜ <b>–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:</b>\n"
            
            for i, winner in enumerate(winners):
                place = i + 1
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if winner.username:
                    user_mention = f"@{winner.username}"
                else:
                    # –ï—Å–ª–∏ –Ω–µ—Ç username, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å first_name –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ ID
                    display_name = winner.first_name or f"–£—á–∞—Å—Ç–Ω–∏–∫ {winner.telegram_user_id}"
                    user_mention = f"<a href='tg://user?id={winner.telegram_user_id}'>{display_name}</a>"
                
                results_text += f"{place}. {user_mention}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω
            if giveaway.message_id:
                results_text += f"\n<a href='https://t.me/{channel_username}/{giveaway.message_id}'>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à</a>"

        # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤ –∫–∞–Ω–∞–ª
        try:
            sent_message = await bot.send_message(
                chat_id=f"@{channel_username}",
                text=results_text,
                parse_mode='HTML'
            )
            log_info(bot.logger, f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ –∫–∞–Ω–∞–ª–µ @{channel_username}")
            
        except telebot.apihelper.ApiException as e:
            error_msg = str(e)
            log_error(bot.logger, f"–û—à–∏–±–∫–∞ API Telegram –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –≤ –∫–∞–Ω–∞–ª @{channel_username}: {error_msg}", "–ø—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            
    except Exception as e:
        log_error(bot.logger, e, f"–ø—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id}")

async def notify_creator(bot, session, giveaway: Giveaway, winners: list):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏.
    (–≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    """
    try:
        creator = session.query(User).get(giveaway.creator_id)
        if not creator:
            log_info(bot.logger, f"–°–æ–∑–¥–∞—Ç–µ–ª—å —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            return
            
        creator_telegram_id = creator.telegram_id
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        notification_text = f"–í–∞—à —Ä–æ–∑—ã–≥—Ä—ã—à (ID: {giveaway.id}) –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω.\n"
        if winners:
            notification_text += f"–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:\n"
            for i, winner in enumerate(winners):
                username = winner.username or winner.first_name or winner.telegram_user_id
                notification_text += f"{i+1}. {username}\n"
        else:
            notification_text += "–ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –Ω–µ—Ç."
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        await bot.send_message(chat_id=creator_telegram_id, text=notification_text)
        log_info(bot.logger, f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é {creator.username or creator.telegram_id}")
        
    except telebot.apihelper.ApiException as e:
        if "Forbidden" in str(e):
            log_info(bot.logger, f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—á–∞–ª —á–∞—Ç —Å –±–æ—Ç–æ–º")
        else:
            log_error(bot.logger, e, f"–æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞—Ç–µ–ª—é —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id}")
    except Exception as e:
        log_error(bot.logger, e, f"—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {giveaway.id}")


async def run_scheduler(bot, interval=60): # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    log_info(bot.logger, "‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –∑–∞–ø—É—â–µ–Ω")
    while True:
        try:
            await publish_scheduled_giveaways(bot)
            await finish_giveaways_by_time(bot)
            await check_giveaways_by_participants(bot)
        except Exception as e:
            log_error(bot.logger, e, "–æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
        await asyncio.sleep(interval)
